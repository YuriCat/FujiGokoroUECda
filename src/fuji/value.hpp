/*
 value.hpp
 Katsuki Ohto
 */

#ifndef UECDA_VALUE_HPP_
#define UECDA_VALUE_HPP_

namespace UECda{
    
    //順位遷移確率と報酬値の基本モデル
    
    /*double seni_dist[5][5]={
     255,102,40,20,16,
     118,132,67,46,19,
     37,76,137,90,62,
     12,35,100,129,114,
     11,34,63,102,159,
     };
     
     const int iReward[15][5]={
     400, 300, 200, 100,   0,
     627, 472, 283, 122,   0,
     766, 576, 327, 130,   0,
     852, 640, 352, 134,   0,
     906, 679, 368, 137,   0,
     940, 704, 378, 138,   0,
     961, 719, 384, 139,   0,
     975, 729, 388, 139,   0,
     983, 735, 390, 140,   0,
     988, 739, 392, 140,   0,
     991, 741, 393, 140,   0,
     993, 743, 393, 140,   0,
     995, 744, 394, 140,   0,
     996, 744, 394, 140,   0,
     996, 745, 394, 140,   0,
     };
     */
    
    double seni_dist[5][5]={
        0.557, 0.276, 0.089, 0.039, 0.039,
        0.300, 0.336, 0.206, 0.104, 0.053,
        0.092, 0.194, 0.311, 0.237, 0.166,
        0.023, 0.118, 0.239, 0.321, 0.298,
        0.027, 0.076, 0.154, 0.299, 0.444,
    };
    
    
#if _PLAYERS == 5
    const int iReward[N_REWARD_CALCULATED_GAMES][5]={
        /*400, 300, 200, 100, 0,
        627, 474, 285, 129, 0,
        767, 580, 333, 143, 0,
        855, 645, 362, 151, 0,
        910, 686, 380, 156, 0,
        944, 712, 391, 159, 0,
        966, 728, 398, 161, 0,
        980, 738, 402, 162, 0,
        988, 745, 405, 163, 0,
        993, 749, 407, 164, 0,
        997, 751, 408, 164, 0,
        999, 753, 409, 164, 0,
        1000, 754, 409, 164, 0,
        1001, 754, 409, 164, 0,
        1001, 754, 409, 164, 0,*/
        400, 300, 200, 100, 0,
        621, 466, 272, 121, 0,
        755, 565, 309, 130, 0,
        837, 624, 331, 135, 0,
        887, 661, 344, 137, 0,
        918, 683, 352, 139, 0,
        937, 697, 357, 140, 0,
        949, 706, 360, 141, 0,
        956, 711, 362, 141, 0,
        961, 714, 363, 141, 0,
        963, 716, 364, 141, 0,
        965, 717, 364, 142, 0,
        966, 718, 364, 142, 0, 
        967, 718, 365, 142, 0, 
        967, 719, 365, 142, 0,
    };
#elif _PLAYERS == 4
    const int iReward[N_REWARD_CALCULATED_GAMES][4] = {
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
        300, 200, 100, 0,
    };
#endif
    
    /*
     const double d[4][5][5]={
     {
     273,  133,  39,  16,  14,
     139,  173,  92,  45,  12,
     43,  83,  121,  104,  61,
     15,  54,  94,  125,  92,
     9,  24,  51,  93,  95,
     },
     {
     192,  79,  18,  12,  5,
     89,  87,  41,  18,  9,
     24,  43,  60,  45,  21,
     3,  26,  44,  56,  33,
     4,  11,  21,  31,  28,
     },
     {
     133,  72,  15,  7,  9,
     72,  57,  39,  28,  13,
     24,  47,  59,  38,  24,
     3,  19,  49,  64,  52,
     6,  17,  23,  50,  80,
     },
     {
     111,  52,  28,  7,  6,
     64,  72,  48,  16,  10,
     20,  50,  89,  55,  30,
     5,  26,  47,  58,  49,
     5,  12,  25,  50,  65,
     },
     };
     
     static void normTransProb(double tp[5][5]){
     int n,i,j;
     double sum;
     for(n=0;n<10;n++){
     //j
     for(j=0;j<5;j++){
     sum=0.0;
     for(i=0;i<5;i++){
     sum+=tp[i][j];
     }
     for(i=0;i<5;i++){
     tp[i][j]/=sum;
     }
     }
     
     //i
     for(i=0;i<5;i++){
     sum=0.0;
     for(j=0;j<5;j++){
     sum+=tp[i][j];
     }
     for(j=0;j<5;j++){
     tp[i][j]/=sum;
     }
     }
     
     }
     for(i=0;i<5;i++){
     for(j=0;j<5;j++){
     printf("%.3f ",tp[i][j]);
     }
     printf("\n");
     }
     }
     
     static void calcValueOfRank(const int rGames,const double tp[5][5]){
     double VOR[rGames][5];
     int g,i,j;
     VOR[0][0]=0;VOR[0][1]=0;VOR[0][2]=0;VOR[0][3]=0;VOR[0][4]=0;
     for(g=1;g<rGames;g++){
     double rv0=0;
     for(i=0;i<5;i++){
     VOR[g][i]=REWARD(i);
     for(j=0;j<5;j++){
     VOR[g][i]+=tp[i][j]*VOR[g-1][j];
     }
     }
     for(i=0;i<5;i++){VOR[g][i]-=VOR[g][4];}
     //printf("G=%d : ",g);
     for(i=0;i<5;i++){
     printf("%d,",(int)(VOR[g][i]*100));
     }
     printf("\n");
     }
     }
     */
    
}

#endif // UECDA_VALUE_HPP_
